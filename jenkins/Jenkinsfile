node("currikidev") {
    def app
      
    stage('Clone repository') {               
        checkout scm    
        
    }  
    
    stage('Build image') {     
        sh 'rm -rf /tmp/tsugi && rm -rf /tmp/tsugi/mod/curriki'
        sh 'git clone https://github.com/ActiveLearningStudio/tsugi-1 /tmp/tsugi'
        sh 'git clone https://github.com/ActiveLearningStudio/CurrikiGO.git -b /tmp/tsugi/mod/curriki'
        sh "yes | cp /tmp/tsugi/mod/curriki/Dockerfile /tmp/tsugi/Dockerfile"
        sh "yes | cp /tmp/tsugi/mod/curriki/php.ini /tmp/tsugi/php.ini"
        sh "yes | cp /tmp/tsugi/mod/curriki/tsugi.conf /tmp/tsugi/tsugi.conf"
        sh "yes | cp /tmp/tsugi/mod/curriki/entrypoint.tsugi.sh /tmp/tsugi/entrypoint.tsugi.sh"    
        app = docker.build("quay.io/curriki/tsugi", "/tmp/tsugi")
        sh 'rm -rf /tmp/tsugi'
    } 
    stage('Test image') {           
        app.inside { 
                sh 'echo "Tsugi Tests passed"'        
        }    
    } 
    stage('Push image') {	
        docker.withRegistry('https://quay.io', 'docker-private-credentials') {            
                app.push("${env.BUILD_NUMBER}")            
                app.push("${tag}")
        }
    }
    

    
    
    
     parallel(
            "StageA": {
                if(Jenkins.instance.getNode("${node}").toComputer().isOnline()){
                    node("${node}") {
                        stage ("${node}") {
                                echo 'Copy'
                                sh "yes | docker service update --image quay.io/curriki/tsugi:${tag} currikistack_currikiprod-tsugi" 
                                echo 'Copy completed'
                        }
                    }
                } else {
                    stage ("${node}") {
                        echo "${node} is offline"
                        exit 1
                    }
                }
            }
    )
    
}
